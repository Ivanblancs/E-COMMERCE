Prerequisites
Install PHP: Make sure PHP (version 8.0 or higher) is installed. You can check this by running php -v in the terminal.
Install Composer: Install Composer, the PHP package manager. You can check if itâ€™s installed by running composer -v.
Install Node.js and npm: Make sure you have Node.js and npm (Node Package Manager) installed. You can check this by running node -v and npm -v.
Install MySQL: Ensure that MySQL server is installed and running.
Step-by-Step Procedure
Clone Your Repository: Open your terminal and navigate to the directory where you want to clone your project. Then run:

git clone https://github.com/Ivanblancs/E-COMMERCE.git
cd E-COMMERCE
Install PHP Dependencies: Inside the project folder, run:


composer install
This will install all the PHP packages defined in your composer.json file.

Install Node.js Dependencies: Next, install the front-end dependencies:


npm install
Copy Environment File: Create a copy of the .env.example file to .env:


cp .env.example .env
Generate Application Key: Generate a new application key:


php artisan key:generate
Configure Database Connection: Open the .env file in a text editor and set the database connection settings:

.env
DB_CONNECTION=mysql
DB_HOST=127.0.0.1
DB_PORT=3306
DB_DATABASE=your_database_name   # Change this to your database name
DB_USERNAME=your_username         # Your MySQL username
DB_PASSWORD=your_password         # Your MySQL password
Create the Database: Create a new database in MySQL. You can do this using a MySQL client (like phpMyAdmin) or via the command line:

sql
CREATE DATABASE your_database_name;
Run Migrations: Run the migrations to create the necessary tables:


php artisan migrate
Seed the Database (if needed): If you have database seeders set up, you can run them with:


php artisan db:seed
Run the Development Server: Start the Laravel development server:


php artisan serve
This will start the server at http://127.0.0.1:8000.

Compile Assets: Finally, if you want to compile your frontend assets (like CSS and JS), run:

npm run dev
Accessing Your Application
Open a web browser and navigate to http://127.0.0.1:8000 to see your application running.

Additional Notes
Environment Variables: If you have any environment-specific variables, make sure to set them in your .env file.
Git Configuration: If you're collaborating with others, ensure that you pull any changes from the repository regularly using:
bash

git pull origin main
This procedure should help you set up and run your Laravel project on a different computer successfully! If you encounter any issues, feel free to ask for further assistance.


sa pag run naman open mo yung integrated terminal ng project mismo irun mo yung php artisan serve tas open mo yung link, then balik ka sa vs code hanapin mo yung resources folder open mo integrated terminal tas npm run dev wag mo bubuksan yung link na nilabas ng npm run dev(wag mo i stop yung php artisan serve) tas i-refresh mo yung localhost ng laravel


